<?xml version="1.0" encoding="utf-8"?>
<TcPlcObject Version="1.1.0.1" ProductVersion="3.1.4018.2">
  <POU Name="MAIN" Id="{ac688648-09a1-4b3d-950c-242df7ea7e88}" SpecialFunc="None">
    <Declaration><![CDATA[PROGRAM MAIN
VAR
	T1: BOOL;
	fcT1: TOF;
	fcT2: TOF;
	fcT3: TOF;
	fcT4: TOF;
	fcT5: TOF;
	fcT6: TOF;
	fcT7: TOF;
	fcT8: TOF;
	T2: BOOL;
	T3: BOOL;
	T4: BOOL;
	T5: BOOL;
	T6: BOOL;
	T7: BOOL;
	
	goAroundCycles : INT := 2;
	
	T8: BOOL;
	trowObjectOut: BOOL;
END_VAR
]]></Declaration>
    <Implementation>
      <ST><![CDATA[IF ERR = 0 THEN

//----------------------------------------------------------	
//object entrance location top righ on lift.

IF rightLiftOptical_IB AND rightLiftUpPosition_IB AND NOT T1 THEN
	IF topRightLiftExp = 0 THEN
		IF obj1 = 0 THEN
			obj1:=1;
			topRightExp :=topRightExp+1;
			topRightExpArr[topRightExp]:=1;
		ELSIF obj2 = 0 THEN
			obj2:=1;
			topRightExp :=topRightExp+1;
			topRightExpArr[topRightExp]:=2;
		ELSIF obj3 = 0 THEN
			obj3:=1;
			topRightExp :=topRightExp+1;
			topRightExpArr[topRightExp]:=3;
		ELSIF obj4 = 0 THEN
			obj4:=1;
			topRightExp :=topRightExp+1;
			topRightExpArr[topRightExp]:=4;
		END_IF
	ELSE
			topRightExp := topRightExp+1;
			topRightExpArr[topRightExp]:= topRightLiftExpArr[1];
			topRightLiftExp := 0;
			topRightLiftExpArr[1] := 0;					
	END_IF
END_IF
fcT1(IN:=(rightLiftOptical_IB AND rightLiftUpPosition_IB), PT:=T#1S, Q=>T1);

//----------------------------------------------------------
//object on top right conveyor sensor

IF topRight_IB  AND NOT T2 THEN
	IF topRightExp = 0 THEN
		ERR := 1;
	ELSE
		topRightExp := topRightExp -1;	
		topLeftExp := topLeftExp +1;
		topLeftExpArr[topLeftExp] := topRightExpArr[1];
		topRightExpArr[1] := topRightExpArr[2];
		topRightExpArr[2] := topRightExpArr[3];
		topRightExpArr[3] := topRightExpArr[4];
		topRightExpArr[4] := topRightExpArr[5];
	 	topRightExpArr[5] := 0;		
	END_IF
END_IF
fcT2(IN:=topRight_IB , PT:=T#300MS, Q=>T2);

//----------------------------------------------------------
//object on top left conveyor sensor

IF topLeft_IB AND NOT T3 THEN
	IF topLeftExp = 0 THEN
		ERR := 2;
	ELSE
		topLeftExp := topLeftExp -1;	
		topLeftLiftExp := topLeftLiftExp +1;
		topLeftLiftExpArr[topLeftLiftExp] :=topLeftExpArr[1];
		topLeftExpArr[1] := topLeftExpArr[2];
		topLeftExpArr[2] := topLeftExpArr[3];
		topLeftExpArr[3] := topLeftExpArr[4];
		topLeftExpArr[4] := topLeftExpArr[5];
	 	topLeftExpArr[5] := 0;		
	END_IF
END_IF
fcT3(IN:=topRight_IB , PT:=T#300MS, Q=>T3);

//----------------------------------------------------------
//object detected on left lift when the lift is up

IF lefttLiftUpPosition_IB AND leftLiftOptical_IB AND NOT T4 THEN
	IF topLeftLiftExp = 0 THEN
		ERR := 3;
	ELSE
		topLeftLiftExp := topLeftLiftExp - 1;
		bottomLeftLiftExp := bottomLeftLiftExp +1;
		bottomLeftLiftExpArr[bottomLeftLiftExp] := topLeftLiftExpArr[1];
		topLeftLiftExpArr[1] := topLeftLiftExpArr[2];
		topLeftLiftExpArr[2] := topLeftLiftExpArr[3];
		topLeftLiftExpArr[3] := topLeftLiftExpArr[4];
		topLeftLiftExpArr[4] := topLeftLiftExpArr[5];
		topLeftLiftExpArr[5] := 0;
	END_IF
END_IF
fcT4(IN:=(lefttLiftUpPosition_IB AND leftLiftOptical_Ib), PT:=T#300MS, Q=>T4);

//----------------------------------------------------------
//object detected on left lift when the lift is down

IF leftLiftDownPosition_IB AND leftLiftOptical_IB AND NOT T5 THEN
	IF bottomLeftLiftExp = 0 THEN
		ERR := 4;
	ELSE
		bottomLeftLiftExp := 0;
		bottomLeftExp := bottomLeftExp +1;
		bottomLeftExpArr[bottomLeftExp] := bottomLeftLiftExpArr[1];
		bottomLeftLiftExpArr[1] := 0;
	END_IF
END_IF
fcT5(IN:=(leftLiftDownPosition_IB AND leftLiftOptical_IB), PT:=T#300MS, Q=>T5);


//----------------------------------------------------------
//object detected on bottom belt left sensor

IF bottomLeft_IB AND NOT T5 THEN
	IF bottomLeftExp = 0 THEN
		ERR := 5;
	ELSE
		bottomLeftExp := bottomLeftExp - 1;
		bottomRightExp := bottomRightExp +1;
		bottomRightExpArr[bottomLeftExp] := bottomLeftExpArr[1];
		bottomLeftExpArr[1] := bottomLeftExpArr[2];
		bottomLeftExpArr[2] := bottomLeftExpArr[3];
		bottomLeftExpArr[3] := bottomLeftExpArr[4];
		bottomLeftExpArr[4] := bottomLeftExpArr[5];
		bottomLeftExpArr[5] := 0;
	END_IF
END_IF
fcT5(IN:= bottomLeft_IB, PT:=T#300MS, Q=>T5);

//----------------------------------------------------------
//object detected on bottom belt right sensor

IF bottomRight_IB AND NOT T6 THEN
	IF bottomRightExp = 0 THEN
		ERR := 6;
	ELSE
		bottomRightExp := bottomRightExp - 1;
		bottomRightLiftExp := bottomRightLiftExp +1;
		bottomRightLiftExpArr[bottomRightLiftExp] := bottomRightExpArr[1];
		bottomRightExpArr[1] := bottomRightExpArr[2];
		bottomRightExpArr[2] := bottomRightExpArr[3];
		bottomRightExpArr[3] := bottomRightExpArr[4];
		bottomRightExpArr[4] := bottomRightExpArr[5];
		bottomRightExpArr[5] := 0;
	END_IF
END_IF
fcT6(IN:= bottomRight_IB, PT:=T#300MS, Q=>T6);

//----------------------------------------------------------
//object detected on right lift sensor when the lift is down

IF rightLiftDownPosition_IB AND rightLiftOptical_IB  AND (NOT T7 OR NOT trowingObjectOut) THEN
	IF bottomRightLiftExp = 0 THEN
		ERR := 7;
	ELSIF bottomRightLiftExp[bottomRightLiftExp] = 1  AND obj1 >= goAroundCycles THEN
		obj1 :=0;
		trowObjectOut := TRUE;
	ELSIF bottomRightLiftExp[bottomRightLiftExp] = 2  AND obj2 >= goAroundCycles THEN
		obj2 :=0;
		trowObjectOut := TRUE;
	ELSIF bottomRightLiftExp[bottomRightLiftExp] = 3  AND obj3 >= goAroundCycles THEN
		obj3 :=0;
		trowObjectOut := TRUE;
	ELSIF bottomRightLiftExp[bottomRightLiftExp] = 4  AND obj4 >= goAroundCycles THEN
		obj4 :=0;
		trowObjectOut := TRUE;
	ELSE
		bottomRightLiftExp := bottomRightLiftExp - 1;
		topRightLiftExp := topRightLiftExp +1;
		topRightLiftExpArr[topRightLiftExp] := bottomRightLiftExpArr[1];
		bottomRightLiftExpArr[1] := bottomRightLiftExpArr[2];
		bottomRightLiftExpArr[2] := bottomRightLiftExpArr[3];
		bottomRightLiftExpArr[3] := bottomRightLiftExpArr[4];
		bottomRightLiftExpArr[4] := bottomRightLiftExpArr[5];
		bottomRightLiftExpArr[5] := 0;
	END_IF
END_IF
fcT7(IN:=(rightLiftDownPosition_IB AND rightLiftOptical_IB), PT:=T#300MS, Q=>T7);
fcT8(IN:=trowObjectOut, PT:=T#4S, Q=>TrowingObjectOut);
trowObjectOut := FALSE;

ELSE
	//error handling
END_IF




]]></ST>
    </Implementation>
  </POU>
</TcPlcObject>